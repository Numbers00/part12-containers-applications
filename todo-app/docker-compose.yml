version: '3.8'

services:
  app:
    image: todo-frontend
    env_file:
      - .env
    build:
      context: ./todo-frontend
      dockerfile: Dockerfile
    container_name: todo-frontend
    depends_on:
      - server
  server:
    image: todo-backend
    build:
      context: ./todo-backend
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      MONGO_URL: ${MONGO_URL}
      REDIS_URL: ${REDIS_URL}
    container_name: todo-backend
    depends_on:
      - mongodb
      - redis
  mongodb:
    image: mongo:latest
    ports:
      - 3456:27017
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    volumes:
      # bound mounts https://docs.docker.com/storage/bind-mounts/
      # a type of volume, remove with --volume when running docker compose down
      # changes in either file reflects the other

      # js files in docker-entrypoint-initdb.d are run when first starting the container
      # <local file>:<file in container>
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./todo-backend/mongo_data:/data/db
    container_name: todo-app-mongodb
  redis:
    image: redis:latest
    ports:
      - 6379:6379
    # --appendonly yes: enable AOF persistence
    # --loglevel warning: log only warnings and errors
    command: redis-server --appendonly yes --loglevel warning
    volumes:
      - ./todo-backend/redis_data:/data
    container_name: todo-app-redis
  nginx:
    image: nginx:1.20.1
    volumes:
      # ro means read only
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - app # wait for frontend container to be started
      - server # wait for backend container to be started


volumes:
  mongo_data:
  redis_data:
